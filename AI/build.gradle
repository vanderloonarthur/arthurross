plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

bootJar {
    archiveBaseName = 'AI-0.0.1-SNAPSHOT'
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" } // For milestone versions
    maven { url "https://repo.spring.io/release" }   // For stable releases
}

ext {
    set('springAiVersion', "1.0.0-M4") // Replace with available version if needed
}

dependencies {
    // Spring Boot Web and JPA
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.3'
    implementation 'org.springframework.boot:spring-boot-starter-logging:3.1.3'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.3'
    implementation 'org.springframework.boot:spring-boot-starter-aop:3.1.3'

    // MySQL connector
    runtimeOnly 'mysql:mysql-connector-java:8.1.0'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.0'

    // Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.1.3'

    // Spring AI (if required)
    implementation "org.springframework.ai:spring-ai-openai-spring-boot-starter:${springAiVersion}"

    // JPA API (Jakarta Persistence for Spring Boot 3.x)
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
}

tasks.named('test') {
    useJUnitPlatform()
}
